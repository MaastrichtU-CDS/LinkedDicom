#!/usr/bin/env python

from LinkedDicom import LinkedDicom
import argparse
import os

def main_parse(args):
    """
    Main function when parsing a folder
    """
    ldcm = None
    
    ontology_file_path = args.ontology_file
    if ontology_file_path is None:
        import pkg_resources
        my_data = pkg_resources.resource_string(LinkedDicom.__name__, "LinkedDicom.owl")
        ldcm = LinkedDicom.LinkedDicom(my_data, True)
    else:
        ldcm = LinkedDicom.LinkedDicom(ontology_file_path)

    print(f"Start processing folder {args.dicom_input_folder}. Depending on the folder size this might take a while.")
    
    ldcm.processFolder(args.dicom_input_folder)
    
    output_location = os.path.join(args.dicom_input_folder, "linkeddicom.ttl") 
    ldcm.saveResults(output_location)
    print("Stored results in " + output_location)

def main():
    parser = argparse.ArgumentParser(description="LinkedDicom command line utility")
    # Set the default for the dataset argument
    parser.add_argument("dicom-input-folder", help="Location of dicom folder for parsing.")
    parser.add_argument("-o", "--ontology-file", help="Location of ontology file to use for override.")
    args = parser.parse_args()

    main_parse(args)

if __name__=="__main__":
    main()